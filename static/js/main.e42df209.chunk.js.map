{"version":3,"sources":["Form/FormMakanan.js","Lib/DaftarMakanan.js","Page/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["FormMakanan","props","state","pesanan","jumlah","hendleChange","bind","hendleSubmit","hendleChangeJumlah","React","createRef","e","this","setState","target","value","preventDefault","alert","current","focus","onSubmit","onChange","type","ref","placeholder","Component","DaftarMakanan","NamaMakanan","Harga","img","listmakanan","MenuMakanan","map","data","index","key","src","alt","width","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2PA6DeA,E,kDA1DX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,QAAS,GACTC,OAAQ,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKH,QAAUM,IAAMC,YAVP,E,yDAaLC,GACTC,KAAKC,SAAS,CAAEV,QAASQ,EAAEG,OAAOC,U,yCAEnBJ,GACfC,KAAKC,SAAS,CAAET,OAAQO,EAAEG,OAAOC,U,mCAGxBJ,GACTA,EAAEK,iBACFC,MACI,yBACAL,KAAKV,MAAMC,QACX,uBACAS,KAAKV,MAAME,QAEfQ,KAAKC,SAAS,CAAEV,QAAS,GAAIC,OAAQ,KACrCQ,KAAKT,QAAQe,QAAQC,U,+BAGrB,OACI,6BACI,gCACI,0BAAMC,SAAUR,KAAKL,cACjB,2BACIc,SAAUT,KAAKP,aACfiB,KAAK,OACLP,MAAOH,KAAKV,MAAMC,QAClBoB,IAAKX,KAAKT,QACVqB,YAAY,yBAEhB,2BACIF,KAAK,SACLP,MAAOH,KAAKV,MAAME,OAClBiB,SAAUT,KAAKJ,mBACfgB,YAAY,2BAEhB,6BAdJ,IAcW,6BACP,2BAAOF,KAAK,SAASP,MAAM,iB,GAnDzBU,aC8BXC,EAhCO,CAClB,CACIC,YAAa,cACbC,MAAO,SACPC,IACA,4EAEJ,CACIF,YAAa,OACbC,MAAO,SACPC,IACA,sEAEJ,CACIF,YAAa,OACbC,MAAO,SACPC,IACA,8EAEJ,CACIF,YAAa,OACbC,MAAO,SACPC,IACA,2GAEJ,CACIF,YAAa,cACbC,MAAO,SACPC,IACA,6FCxBFC,EAAc,CAChB,CACIH,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,aACbC,MAAO,UAEX,CACID,YAAa,QACbC,MAAO,UAEX,CACID,YAAa,WACbC,MAAO,WA+CAG,E,uKAzCP,OACI,6BACI,uDACA,+BACI,+BACI,4BACKL,EAAcM,KAAI,SAACC,EAAMC,GACtB,OACI,wBAAIC,IAAKD,GACL,yBACIE,IAAKH,EAAKJ,IACVQ,IAAI,kBACJC,MAAM,MACNC,OAAO,QAEX,gCACI,2BAAIN,EAAKN,aACT,0CAAgBM,EAAKL,eAQjD,4CACCE,EAAYE,KAAI,SAAEC,EAAOC,GACtB,OACI,yBAAKC,IAAKD,GACN,2BACKD,EAAKN,YADV,gBACoCM,EAAKL,WAKrD,kBAAC,EAAD,W,GArCUH,aC/BXe,MATf,WACE,OACE,6BACE,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e42df209.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass FormMakanan extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            pesanan: \"\",\n            jumlah: \"\"\n        }\n\n        this.hendleChange = this.hendleChange.bind(this);\n        this.hendleSubmit = this.hendleSubmit.bind(this);\n        this.hendleChangeJumlah = this.hendleChangeJumlah.bind(this);\n        this.pesanan = React.createRef();\n    }\n\n    hendleChange(e){\n        this.setState({ pesanan: e.target.value});\n    }\n    hendleChangeJumlah(e){\n        this.setState({ jumlah: e.target.value});\n    }\n\n    hendleSubmit(e){\n        e.preventDefault();\n        alert(\n            \"Pesanan Anda Adalah : \" +\n            this.state.pesanan +\n            \" | Jumlah Pesanan : \" +\n            this.state.jumlah\n        );\n        this.setState({ pesanan: \"\", jumlah: \"\"});\n        this.pesanan.current.focus();\n    }\n    render(){\n        return(\n            <div>\n                <center>\n                    <form onSubmit={this.hendleSubmit}>\n                        <input\n                            onChange={this.hendleChange}\n                            type=\"text\"\n                            value={this.state.pesanan}\n                            ref={this.pesanan}\n                            placeholder=\"Masukan Pesanan Anda\"\n                        />\n                        <input\n                            type=\"number\"\n                            value={this.state.jumlah}\n                            onChange={this.hendleChangeJumlah}\n                            placeholder=\"Masukan Jumlah Pesanan\"\n                        />\n                        <br /> <br />\n                        <input type=\"submit\" value=\"Pesan\" />\n                    </form>\n                </center>\n            </div>\n        );\n    }\n}\n\nexport default FormMakanan;","const DaftarMakanan = [\n    {\n        NamaMakanan: \"Nasi Padang\",\n        Harga: \"20.000\",\n        img:\n        \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"\n    },\n    {\n        NamaMakanan: \"Sate\",\n        Harga: \"20.000\",\n        img:\n        \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"\n    },\n    {\n        NamaMakanan: \"Soto\",\n        Harga: \"10.000\",\n        img:\n        \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\n    },\n    {\n        NamaMakanan: \"Uduk\",\n        Harga: \"10.000\",\n        img:\n        \"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\"\n    },\n    {\n        NamaMakanan: \"Nasi Kuning\",\n        Harga: \"15.000\",\n        img:\n        \"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"\n    }\n];\nexport default DaftarMakanan;","import React, {Component} from \"react\";\nimport FormMakanan from \"../Form/FormMakanan\";\nimport DaftarMakanan from \"../Lib/DaftarMakanan\";\n\n\nconst listmakanan = [\n    {\n        NamaMakanan: \"Nasi Padang\",\n        Harga: \"20.000\"\n    },\n    {\n        NamaMakanan: \"Sate\",\n        Harga: \"20.000\"\n    },\n    {\n        NamaMakanan: \"Soto\",\n        Harga: \"10.000\"\n    },\n    {\n        NamaMakanan: \"Uduk\",\n        Harga: \"10.000\"\n    },\n    {\n        NamaMakanan: \"Nasi Kuning\",\n        Harga: \"15.000\"\n    },\n    {\n        NamaMakanan: \"Ayam Geprek\",\n        Harga: \"15.000\"\n    },\n    {\n        NamaMakanan: \"Pecel Lele\",\n        Harga: \"15.000\"\n    },\n    {\n        NamaMakanan: \"Pecel\",\n        Harga: \"10.000\"\n    },\n    {\n        NamaMakanan: \"Mie Ayam\",\n        Harga: \"10.000\"\n    }\n];\n\nclass MenuMakanan extends Component{\n    render(){\n        return(\n            <div>\n                <h3>Daftar Makanan favorite</h3>\n                <table>\n                    <tbody>\n                        <tr>\n                            {DaftarMakanan.map((data, index) => {\n                                return(\n                                    <td key={index}>\n                                        <img\n                                            src={data.img}\n                                            alt=\"Product Makanan\"\n                                            width=\"150\"\n                                            height=\"100\"\n                                        />\n                                        <center>\n                                            <p>{data.NamaMakanan }</p>\n                                            <p>Harga : Rp. {data.Harga}</p>\n                                        </center>\n                                    </td>\n                                );\n                            })}\n                        </tr>\n                    </tbody>\n                </table>\n                <h4>List Makanan</h4>\n                {listmakanan.map(( data , index) => {\n                    return(\n                        <div key={index}>\n                            <p>\n                                {data.NamaMakanan} | Harga Rp. {data.Harga}\n                            </p>\n                        </div>\n                    );\n                })}\n                <FormMakanan />\n            </div>\n        )\n    }\n}\n\nexport default MenuMakanan;","import React from 'react';\nimport './App.css';\nimport MenuMakanan from './Page/MenuMakanan';\n\nfunction App() {\n  return (\n    <div>\n      <MenuMakanan />\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}